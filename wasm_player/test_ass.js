import {DOCK_TYPE, showPopup, hidePopup} from "./lib/ui_popup.js";

function playSubtitle(assRender, renderInfo, showContainer) {
    let subtitleBar = document.getElementById('div-subtitle');
    if(!subtitleBar) {
      subtitleBar = document.createElement('div');
      subtitleBar.id = 'div-subtitle';
      subtitleBar.style.width = showContainer.style.width;
      subtitleBar.style.height = 'auto';
      subtitleBar.style.minHeight = '1rem';
      subtitleBar.style.backgroundColor = "transparent";
      subtitleBar.style.display = 'flex';
      subtitleBar.style.justifyContent = 'center';
      subtitleBar.style.alignItems = 'center';
      subtitleBar.style.flexDirection = 'column-reverse';
      hidePopup(subtitleBar);
      document.body.appendChild(subtitleBar);
    }
  
    // let sbMirror = document.getElementById('div-subtitle-m');
    let styleWidth = showContainer.style.width;
  
    // while(sbMirror.firstChild) {
    //   sbMirror.removeChild(sbMirror.lastChild);
    // }
  
    while(subtitleBar.firstChild) {
      subtitleBar.removeChild(subtitleBar.lastChild);
    }
  
    subtitleBar.style.width = showContainer.style.width;
  
    for(let rectIdx = 0; rectIdx < renderInfo.subtitleData.length; ++rectIdx) {
      let subRect = renderInfo.subtitleData[rectIdx];
      let eventsFormat = assRender.eventsFormat;
      if(eventsFormat[0] == 'Layer' || eventsFormat[0] == 'Marked') {
        eventsFormat = eventsFormat.slice(1);
      }
      let eventRaw = assRender.parseEvent(subRect, eventsFormat);
      console.log('eventRaw '+JSON.stringify(eventRaw, null, '\t'));
      let dialog = Ass.Dialogue.fromRaw(eventRaw);
      console.log('event dialog '+JSON.stringify(dialog, null, '\t'));
    
      let styledEl = assRender.applyStylesToDialogue(dialog, subtitleBar, window.devicePixelRatio);
    //   subtitleBar.appendChild(styledEl.el);
    }
    
    // sbMirror.innerHTML = '\n'.concat(renderInfo.subtitleData);
    // subtitleBar.innerHTML = '\n'.concat(renderInfo.subtitleData);
    showPopup(subtitleBar, showContainer, DOCK_TYPE.BOTTOM_BOTTOM, 0, 0);
    
  }

function assTest() {
    let testAssHeader = `[Script Info]
; Script generated by FFmpeg/Lavc59.15.102
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288
ScaledBorderAndShadow: yes

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text`;
  
    let testAssEvent = "0,0,Default,,0,0,0,,In a hole in the ground\\Nthere lived a hobbit.";

    let ass = Ass.fromString(testAssHeader);
    console.log('eventsFormat '+JSON.stringify(ass.eventsFormat, null, '\t'));
    let eventsFormat = ass.eventsFormat;
    if(eventsFormat[0] == 'Layer' || eventsFormat[0] == 'Marked') {
      eventsFormat = eventsFormat.slice(1);
    }
    let eventRaw = ass.parseEvent(testAssEvent, eventsFormat);
    console.log('eventRaw '+JSON.stringify(eventRaw, null, '\t'));
    let dialog = Ass.Dialogue.fromRaw(eventRaw);
    console.log('event dialog '+JSON.stringify(dialog, null, '\t'));
  
    let styledEl = ass.applyStylesToDialogue(dialog, window.devicePixelRatio);
    let canvas = document.getElementById('main');
    document.body.appendChild(styledEl.el);
    showPopup(styledEl.el, canvas, DOCK_TYPE.BOTTOM_BOTTOM, 0, 0);
  
  }

  function assTestRender() {
    let testAssHeader = `[Script Info]
; Script generated by FFmpeg/Lavc59.15.102
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288
ScaledBorderAndShadow: yes

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text`;
  
    let testAssEvent = "0,0,Default,,0,0,0,,In a hole in the ground\\Nthere lived a hobbit.";

    let ass = Ass.fromString(testAssHeader);
    let canvas = document.getElementById('main');
    let renderInfo = {'subtitleData': [testAssEvent]};
    playSubtitle(ass, renderInfo, canvas);
  
  }
  
  function assTest1() {
    let testAssHeader = `[Script Info]

;SrtEdit 6.2.2012.322

;Copyright(C) 2005-2012 Yuan Weiguo



Title: 

Original Script: 

Original Translation: 

Original Timing: 

Original Editing: 

Script Updated By: 

Update Details: 

ScriptType: v4.00

Collisions: Normal

PlayResX: 384

PlayResY: 288

Timer: 100.0000

Synch Point: 

WrapStyle: 0

ScaledBorderAndShadow: no



[V4 Styles]

Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding

Style: Default,SimHei,18,&HFFFFFF,&H00FFFF,&H000000,&H000000,-1,0,1,2,3,2,20,20,15,0,1



[Events]

Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text`;
  
    let testAssEvent = atob('NTI1LCxEZWZhdWx0LE5UUCwwMDAwLDAwMDAsMDAwMCwhRWZmZWN0LHsIb3JkMQNjJkhGRjgwMDAmfTEyMzQ=');
    let ass = Ass.fromString(testAssHeader);
    console.log('eventsFormat '+JSON.stringify(ass.eventsFormat, null, '\t'));
    let eventsFormat = ass.eventsFormat;
    if(eventsFormat[0] == 'Layer' || eventsFormat[0] == 'Marked') {
      eventsFormat = eventsFormat.slice(1);
    }
    let eventRaw = ass.parseEvent(testAssEvent, eventsFormat);
    console.log('eventRaw '+JSON.stringify(eventRaw, null, '\t'));
    let dialog = Ass.Dialogue.fromRaw(eventRaw);
    console.log('event dialog '+JSON.stringify(dialog, null, '\t'));
  
    let div = document.createElement('div');
    let styledEl = ass.applyStylesToDialogue(dialog, div, window.devicePixelRatio);
    let canvas = document.getElementById('main');
    document.body.appendChild(div);
    showPopup(div, canvas, DOCK_TYPE.BOTTOM_BOTTOM, 0, 0);
  }
  
  document.addEventListener('DOMContentLoaded', (event) => {
    console.log('run ass test!');
    // assTest();
    // assTestRender();
    assTest1();
});
 