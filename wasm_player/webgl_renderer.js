class Texture{constructor(e){this.gl=e,this.texture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)}bind(e,t,r){var a=this.gl;a.activeTexture([a.TEXTURE0,a.TEXTURE1,a.TEXTURE2][e]),a.bindTexture(a.TEXTURE_2D,this.texture),a.uniform1i(a.getUniformLocation(t,r),e)}fill(e,t,r){var a=this.gl;a.bindTexture(a.TEXTURE_2D,this.texture),a.texImage2D(a.TEXTURE_2D,0,a.LUMINANCE,e,t,0,a.LUMINANCE,a.UNSIGNED_BYTE,r)}}class WebGLRenderer{constructor(e,t){this.canvas=e,this.gl=e.getContext("webgl")||e.getContext("experimental-webgl"),this.initGL(t)}initGL(e){var t,r,a,i,o;this.gl?((t=this.gl).pixelStorei(t.UNPACK_ALIGNMENT,1),r=t.createProgram(),a=["attribute highp vec4 aVertexPosition;","attribute vec2 aTextureCoord;","varying highp vec2 vTextureCoord;","uniform mat4 uVPMatrix;","void main(void) {"," gl_Position = aVertexPosition*uVPMatrix;"," vTextureCoord = aTextureCoord;","}"].join("\n"),i=t.createShader(t.VERTEX_SHADER),t.shaderSource(i,a),t.compileShader(i),a=["precision highp float;","varying lowp vec2 vTextureCoord;","uniform sampler2D YTexture;","uniform sampler2D UTexture;","uniform sampler2D VTexture;","const mat4 YUV2RGB = mat4","("," 1.1643828125, 0, 1.59602734375, -.87078515625,"," 1.1643828125, -.39176171875, -.81296875, .52959375,"," 1.1643828125, 2.017234375, 0, -1.081390625,"," 0, 0, 0, 1",");","void main(void) {"," gl_FragColor = vec4( texture2D(YTexture, vTextureCoord).x, texture2D(UTexture, vTextureCoord).x, texture2D(VTexture, vTextureCoord).x, 1) * YUV2RGB;","}"].join("\n"),o=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(o,a),t.compileShader(o),t.attachShader(r,i),t.attachShader(r,o),t.linkProgram(r),t.useProgram(r),t.getProgramParameter(r,t.LINK_STATUS)||console.log("[ER] Shader link failed."),a=t.getAttribLocation(r,"aVertexPosition"),t.enableVertexAttribArray(a),i=t.getAttribLocation(r,"aTextureCoord"),t.enableVertexAttribArray(i),o=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0]),t.STATIC_DRAW),t.vertexAttribPointer(a,3,t.FLOAT,!1,0,0),o=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,new Float32Array([1,0,0,0,1,1,0,1]),t.STATIC_DRAW),t.vertexAttribPointer(i,2,t.FLOAT,!1,0,0),t.y=new Texture(t),t.u=new Texture(t),t.v=new Texture(t),t.y.bind(0,r,"YTexture"),t.u.bind(1,r,"UTexture"),t.v.bind(2,r,"VTexture"),this.scaleLocation=t.getUniformLocation(r,"uVPMatrix"),this.matScaleLeft=[.5,0,0,-.5,0,.5,0,0,0,0,1,0,0,0,0,1],this.matScaleRight=[.5,0,0,.5,0,.5,0,0,0,0,1,0,0,0,0,1],this.matScale=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],this.isSBS=!!e&&e.isSBS):console.log("[ER] WebGL not supported.")}setSBSMode(e){this.isSBS=!0;e*=.5;this.matScaleLeft=[e,0,0,-e,0,e,0,0,0,0,1,0,0,0,0,1],this.matScaleRight=[e,0,0,e,0,e,0,0,0,0,1,0,0,0,0,1],console.log("renderer: setSBSMode left",this.matScaleLeft),console.log("renderer: setSBSMode right",this.matScaleRight)}setNormalMode(e){e?e<.1?e=.1:1<e&&(e=1):e=1,this.matScale=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],this.isSBS=!1}renderFrame(e,t,r,a,i){var o;this.gl?((o=this.gl).enable(o.SCISSOR_TEST),o.viewport(0,0,o.canvas.width,o.canvas.height),o.clearColor(0,0,0,.7),o.clear(o.COLOR_BUFFER_BIT),o.y.fill(t,r,e.subarray(0,a)),o.u.fill(t>>1,r>>1,e.subarray(a,a+i)),o.v.fill(t>>1,r>>1,e.subarray(a+i,e.length)),o.viewport(0,0,o.canvas.width/2,o.canvas.height),o.scissor(0,0,o.canvas.width/2,o.canvas.height),o.clearColor(1,0,0,.1),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),o.viewport(o.canvas.width/2,0,o.canvas.width/2,o.canvas.height),o.scissor(o.canvas.width/2,0,o.canvas.width/2,o.canvas.height),o.clearColor(0,0,1,.1),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT),o.viewport(0,0,o.canvas.width,o.canvas.height),o.scissor(0,0,o.canvas.width,o.canvas.height),this.isSBS?(o.uniformMatrix4fv(this.scaleLocation,!1,this.matScaleLeft),o.drawArrays(o.TRIANGLE_STRIP,0,4),o.uniformMatrix4fv(this.scaleLocation,!1,this.matScaleRight)):o.uniformMatrix4fv(this.scaleLocation,!1,this.matScale),o.drawArrays(o.TRIANGLE_STRIP,0,4),o.disable(o.SCISSOR_TEST)):console.log("[ER] Render frame failed due to WebGL not supported.")}fullscreen(){var e=this.canvas;e.RequestFullScreen?e.RequestFullScreen():e.webkitRequestFullScreen?e.webkitRequestFullScreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.msRequestFullscreen?e.msRequestFullscreen():alert("This browser doesn't supporter fullscreen")}exitfullscreen(){document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen?document.msExitFullscreen():alert("Exit fullscreen doesn't work")}}export{WebGLRenderer};